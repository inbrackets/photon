// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'package:photon/src/photon_component.dart' as prefix2;
import 'package:photon/src/photon_reflector.dart' as prefix0;
import 'photon_example.dart' as prefix1;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_builder_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflector(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"Sam",
            r".Sam",
            7,
            0,
            const prefix0.Reflector(),
            const <int>[0, 1, 2, 7, 13, 14],
            const <int>[15, 16, 17, 18, 19, 20, 21, 8, 22, 13, 11, 12],
            const <int>[7, 9, 10],
            -1,
            {r"bob": () => prefix1.Sam.bob, r"name": () => prefix1.Sam.name},
            {r"name=": (value) => prefix1.Sam.name = value},
            {r"": (b) => () => b ? new prefix1.Sam() : null},
            -1,
            -1,
            const <int>[-1],
            null,
            null),
        new r.NonGenericClassMirrorImpl(
            r"Bob",
            r".Bob",
            7,
            1,
            const prefix0.Reflector(),
            const <int>[3, 4, 23, 28, 29],
            const <int>[15, 16, 17, 18, 19, 20, 21, 24, 22, 28, 23, 25],
            const <int>[26, 27],
            -1,
            {r"name": () => prefix1.Bob.name},
            {r"name=": (value) => prefix1.Bob.name = value},
            {r"": (b) => () => b ? new prefix1.Bob() : null},
            -1,
            -1,
            const <int>[-1],
            null,
            null),
        new r.NonGenericClassMirrorImpl(
            r"Component",
            r".Component",
            7,
            2,
            const prefix0.Reflector(),
            const <int>[5, 6, 20, 21, 22, 33, 34],
            const <int>[15, 16, 17, 18, 19, 20, 21, 30, 22, 33],
            const <int>[31, 32],
            -1,
            {r"name": () => prefix2.Component.name},
            {r"name=": (value) => prefix2.Component.name = value},
            {r"": (b) => () => b ? new prefix2.Component() : null},
            -1,
            -1,
            const <int>[-1],
            null,
            null)
      ],
      <m.DeclarationMirror>[
        new r.VariableMirrorImpl(r"childComponents", 2130949, 0,
            const prefix0.Reflector(), -1, -1, -1, null, null),
        new r.VariableMirrorImpl(r"name", 32789, 0, const prefix0.Reflector(),
            -1, -1, -1, null, null),
        new r.VariableMirrorImpl(r"test", 32773, 0, const prefix0.Reflector(),
            -1, -1, -1, null, null),
        new r.VariableMirrorImpl(r"childComponents", 2129925, 1,
            const prefix0.Reflector(), -1, -1, -1, null, null),
        new r.VariableMirrorImpl(r"name", 32789, 1, const prefix0.Reflector(),
            -1, -1, -1, null, null),
        new r.VariableMirrorImpl(r"childComponents", 2130949, 2,
            const prefix0.Reflector(), -1, -1, -1, null, null),
        new r.VariableMirrorImpl(r"name", 32789, 2, const prefix0.Reflector(),
            -1, -1, -1, null, null),
        new r.MethodMirrorImpl(r"bob", 65554, 0, null, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 0, -1, -1, 8),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 1, -1, -1, 9),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflector(), 1, -1, -1, 10),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflector(), 2, -1, -1, 11),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflector(), 2, -1, -1, 12),
        new r.MethodMirrorImpl(r"template", 65539, 0, null, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"", 64, 0, -1, -1, -1, null, const <int>[],
            const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"==", 131074, null, -1, -1, -1, null,
            const <int>[2], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"toString", 131074, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"noSuchMethod", 65538, null, null, -1, -1, null,
            const <int>[3], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"hashCode", 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"runtimeType", 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"render", 262146, 2, null, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"rerender", 262146, 2, null, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"el", 131075, 2, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"bob", 262146, 1, null, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflector(), 3, -1, -1, 24),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflector(), 3, -1, -1, 25),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflector(), 4, -1, -1, 26),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflector(), 4, -1, -1, 27),
        new r.MethodMirrorImpl(r"template", 65539, 1, null, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"", 64, 1, -1, -1, -1, null, const <int>[],
            const prefix0.Reflector(), null),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflector(), 5, -1, -1, 30),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflector(), 6, -1, -1, 31),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflector(), 6, -1, -1, 32),
        new r.MethodMirrorImpl(r"template", 65539, 2, null, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        new r.MethodMirrorImpl(r"", 0, 2, -1, -1, -1, null, const <int>[],
            const prefix0.Reflector(), null)
      ],
      <m.ParameterMirror>[
        new r.ParameterMirrorImpl(r"_name", 32870, 10,
            const prefix0.Reflector(), -1, -1, -1, null, null, null, null),
        new r.ParameterMirrorImpl(r"_test", 32870, 12,
            const prefix0.Reflector(), -1, -1, -1, null, null, null, null),
        new r.ParameterMirrorImpl(r"other", 16390, 15,
            const prefix0.Reflector(), null, -1, -1, null, null, null, null),
        new r.ParameterMirrorImpl(r"invocation", 32774, 17,
            const prefix0.Reflector(), -1, -1, -1, null, null, null, null),
        new r.ParameterMirrorImpl(r"_childComponents", 2130022, 25,
            const prefix0.Reflector(), -1, -1, -1, null, null, null, null),
        new r.ParameterMirrorImpl(r"_name", 32870, 27,
            const prefix0.Reflector(), -1, -1, -1, null, null, null, null),
        new r.ParameterMirrorImpl(r"_name", 32870, 32,
            const prefix0.Reflector(), -1, -1, -1, null, null, null, null)
      ],
      <Type>[prefix1.Sam, prefix1.Bob, prefix2.Component],
      3,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"render": (dynamic instance) => instance.render,
        r"rerender": (dynamic instance) => instance.rerender,
        r"childComponents": (dynamic instance) => instance.childComponents,
        r"el": (dynamic instance) => instance.el,
        r"template": (dynamic instance) => instance.template,
        r"test": (dynamic instance) => instance.test,
        r"bob": (dynamic instance) => instance.bob
      },
      {
        r"test=": (dynamic instance, value) => instance.test = value,
        r"childComponents=": (dynamic instance, value) =>
            instance.childComponents = value
      },
      null,
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
